form .textbox input, form .textbox textarea {
    width: calc(90% - 25px);
    min-width: calc(90% - 25px);
    max-width: calc(90% - 25px);
}

form .textbox input,  form .textbox textarea {
    --padding-x: 10px;
    --padding-y: 10px;
    background-color: #212125;
    color: white;
    border-radius: 5px;
    padding: var(--padding-x) var(--padding-y) ;
    font-size: 19px;
    border: none;
    transition: all 0.3s ease;
    border: none;
     width: calc(100% - 20px);
     min-width: none;
     max-width: none;
    min-height: 25px;
}

.mra-overlay{
    background-color: var(--bg);
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0px;
    left: 0px;
    display: flex;
    align-items: center;
    justify-content: center;

    gap: 25px;
    
  transition: opacity 0.5s ease;
  pointer-events: auto;
}
.mra-overlay.closed{  
    opacity: 0;
    pointer-events: none;
}
@media (max-width: 55em)
{
    body{
        margin-left: auto !important;
    }
}
.mra-overlay h1{
    color: var(--fg);
}
.custom-loader {
    width: 52px;
    aspect-ratio: 1;
    border-radius: 50%;
    background: conic-gradient(#0000 10%,var(--accent-lighter));
    -webkit-mask: radial-gradient(farthest-side,#0000 calc(100% - 9px),#000 0);
    animation:s3 1s infinite linear;
  }
  @keyframes s3 {to{transform: rotate(1turn)}}
.main-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

#gift-contaner{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 17px;
}

@media (prefers-color-scheme: light) {

     form .textbox input,
    form .textbox textarea {
        background-color: #f3f1f1 !important;
        color: #121316 !important;
        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.182);
        border: 1px solid #12131655 !important;
    }
}

#main{
    display: flex;
    flex-direction: column;
    padding: 100px 100px;
    gap: 15px;
    min-width: 300px;
}

#claim_form{
    margin-top: 5px;
    display: flex;
    flex-direction: column;
    gap: 15px;
    margin-left: auto;
    margin-right: auto;
    width: 20rem;
}

#congratulationsDialog {
    width: 100%;
    height: 100%;
    top: -10px;
    position: fixed;
    z-index: 999;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background: var(--accent-09);
    backdrop-filter: blur(6px);
    opacity: 0;
    visibility: hidden; /* Use visibility instead of display */
    transition: opacity .3s ease;
}
#particleCanvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
}
.glow{
    --text-color: #ff3232;
    --glow-color: rgb(255 0 0 / 60%);
    color: var(--text-color);
    font-weight: 600;
    text-shadow: 2px 1px 11px var(--glow-color), 1px 3px 20px  var(--glow-color);
}
#congratulationsDialog[open] {
    opacity: 1;
    visibility: visible; /* Show the element when the [open] attribute is present */
}
/* Style for the dialog overlay */
.dialog-overlay {
    position:absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent color */
    backdrop-filter: blur(8px); /* Background blur effect */
    z-index: 9999; /* Make sure it's on top of other elements */
    justify-content: center;
    align-items: center;
  }

  /* Style for the dialog content */
  .dialog-content {    padding: 31px;
    background-color: #f0f0f0;
    box-shadow: 0px 14px 20px 0px rgba(0, 0, 0, 0.2);
    border-radius: 16px;
    display: flex;
    gap: 9px;
    flex-direction: column;
  }


  
  .progress-bar.open{
    opacity: 100;
  }
.progress-bar {
    opacity: 0;
    height: 8px;
    background-color: #2657ea1c;
    width: 100%;
    overflow: hidden;
    border-radius: 15px;
    transition: opacity 1s ease;
  }
  
  .progress-bar-value {
    width: 100%;
    height: 100%;
    background-color: var(--accent);
    animation: indeterminateAnimation 1.5s infinite linear;
    transform-origin: 0% 50%;
  }
  
  @keyframes indeterminateAnimation {
    0% {
      transform:  translateX(0) scaleX(0);
    }
    40% {
      transform:  translateX(0) scaleX(0.4);
    }
    100% {
      transform:  translateX(100%) scaleX(0.5);
    }
  }